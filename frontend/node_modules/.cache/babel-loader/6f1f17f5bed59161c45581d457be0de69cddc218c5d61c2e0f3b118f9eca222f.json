{"ast":null,"code":"var _jsxFileName = \"/Users/manavmangela/Desktop/TSEC/Resume-Manav/ProjectsForInterview/MyProject/stockmarketproject/frontend/src/pages/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = () => {\n  _s();\n  const [topStocks, setTopStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTopStocks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/topstocks\");\n        if (Array.isArray(response.data)) {\n          setTopStocks(response.data);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n      } catch (err) {\n        console.error(\"❌ Error fetching top stocks:\", err.message);\n        setError(\"Failed to load stock data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTopStocks();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top 12 Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topStocks.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [stock.name, \" (\", stock.symbol, \") - $\", stock.price, \" (\", stock.change, \"%)\"]\n      }, stock.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"ceTbokr1UUbWKwF/iMleEbYn8S4=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StockChart","_s","topStocks","setTopStocks","loading","setLoading","error","setError","fetchTopStocks","response","get","Array","isArray","data","Error","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","stock","name","symbol","price","change","_c","$RefreshReg$"],"sources":["/Users/manavmangela/Desktop/TSEC/Resume-Manav/ProjectsForInterview/MyProject/stockmarketproject/frontend/src/pages/StockChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst StockChart = () => {\n  const [topStocks, setTopStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTopStocks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/topstocks\");\n        if (Array.isArray(response.data)) {\n          setTopStocks(response.data);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n      } catch (err) {\n        console.error(\"❌ Error fetching top stocks:\", err.message);\n        setError(\"Failed to load stock data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTopStocks();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\n\n  return (\n    <div>\n      <h2>Top 12 Stocks</h2>\n      <ul>\n        {topStocks.map((stock) => (\n          <li key={stock.symbol}>\n            {stock.name} ({stock.symbol}) - ${stock.price} ({stock.change}%)\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StockChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;UAChCV,YAAY,CAACM,QAAQ,CAACI,IAAI,CAAC;QAC7B,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;QACxC;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACV,KAAK,CAAC,8BAA8B,EAAES,GAAG,CAACE,OAAO,CAAC;QAC1DV,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAmB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIhB,KAAK,EAAE,oBAAOP,OAAA;IAAGwB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAEZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEzD,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvB,OAAA;MAAAmB,QAAA,EACGhB,SAAS,CAACuB,GAAG,CAAEC,KAAK,iBACnB3B,OAAA;QAAAmB,QAAA,GACGQ,KAAK,CAACC,IAAI,EAAC,IAAE,EAACD,KAAK,CAACE,MAAM,EAAC,OAAK,EAACF,KAAK,CAACG,KAAK,EAAC,IAAE,EAACH,KAAK,CAACI,MAAM,EAAC,IAChE;MAAA,GAFSJ,KAAK,CAACE,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}