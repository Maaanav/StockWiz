{"ast":null,"code":"var _jsxFileName = \"/Users/manavmangela/Desktop/TSEC/Resume-Manav/ProjectsForInterview/MyProject/stockmarketproject/frontend/src/pages/ChatBot.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [error, setError] = useState(null);\n  const sendMessage = async () => {\n    if (!message) return;\n    const newChat = [...chat, {\n      user: \"You\",\n      text: message\n    }];\n    setChat(newChat);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to get a response from the chatbot\");\n      const data = await response.json();\n      setChat([...newChat, {\n        user: \"Bot\",\n        text: data.response\n      }]);\n    } catch (err) {\n      setError(\"Chatbot is currently unavailable. Please try again later.\");\n      console.error(\"Chatbot error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agentic AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"cxkjmMEkgWOj13BakyEQRP35PNs=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chat","setChat","error","setError","sendMessage","newChat","user","text","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","style","color","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/manavmangela/Desktop/TSEC/Resume-Manav/ProjectsForInterview/MyProject/stockmarketproject/frontend/src/pages/ChatBot.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst ChatBot = () => {\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [error, setError] = useState(null);\n\n  const sendMessage = async () => {\n    if (!message) return;\n\n    const newChat = [...chat, { user: \"You\", text: message }];\n    setChat(newChat);\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5001/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to get a response from the chatbot\");\n\n      const data = await response.json();\n      setChat([...newChat, { user: \"Bot\", text: data.response }]);\n    } catch (err) {\n      setError(\"Chatbot is currently unavailable. Please try again later.\");\n      console.error(\"Chatbot error:\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Agentic AI Chatbot</h1>\n      <div>\n        {chat.map((msg, index) => (\n          <p key={index}>\n            <strong>{msg.user}:</strong> {msg.text}\n          </p>\n        ))}\n      </div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Ask something...\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}